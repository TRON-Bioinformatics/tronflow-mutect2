/*
 * -------------------------------------------------
 *  TRON-Bioinformatics/tronflow-mutect2 Nextflow config file
 * -------------------------------------------------
 * Default config options for all environments.
 */

profiles {
  conda { process.conda = "$baseDir/environment.yml" }
  debug { process.beforeScript = 'echo $HOSTNAME' }
  test {
    params.reference = "$baseDir/test_data/ucsc.hg19.minimal.fasta"
    params.intervals = "$baseDir/test_data/intervals.minimal.bed"
    params.gnomad = "$baseDir/test_data/gnomad.minimal.vcf.gz"
    params.cpus = 1
    params.memory = "2g"
    timeline.enabled = false
    report.enabled = false
    trace.enabled = false
    dag.enabled = false
  }
}

// Export this variable to prevent local Python libraries from conflicting with those in the container
env {
  PYTHONNOUSERSITE = 1
}

// Capture exit codes from upstream processes when piping
process.shell = ['/bin/bash', '-euo', 'pipefail']

VERSION = '1.1.0'
DOI = 'https://zenodo.org/badge/latestdoi/355860788'

manifest {
  name = 'TRON-Bioinformatics/tronflow-mutect2'
  author = 'Pablo Riesgo-Ferreiro, Ã–zlem Muslu, Luisa Bresadola'
  homePage = 'https://github.com/TRON-Bioinformatics/tronflow-mutect2'
  description = 'Mutect2 best practices workflow'
  mainScript = 'main.nf'
  nextflowVersion = '>=19.10.0'
  version = VERSION
  doi = DOI
}

params.help_message = """
TronFlow Mutect2 v${VERSION} ${DOI}

Usage:
    nextflow run tron-bioinformatics/tronflow-mutect2 -profile conda --input_files input_files [--reference reference.fasta]

This workflow is based on the implementation at /code/iCaM/scripts/mutect2_ID.sh

Input:
    * input_files: the path to a tab-separated values file containing in each row the sample name, tumor bam and normal bam
    The input file does not have header!
    Example input file:
    name1	tumor_bam1	normal_bam1
    name2	tumor_bam2	normal_bam2
    * reference: path to the FASTA genome reference (indexes expected *.fai, *.dict)
    * intervals: path to a BED file containing the regions to analyse
    * gnomad: path to the gnomad VCF

Optional input:
    * output: the folder where to publish output
    * memory: the ammount of memory used by each job (default: 16g)
    * cpus: the number of CPUs used by each job (default: 2)
        * disable_common_germline_filter: disable the use of GnomAD to filter out common variants in the population
    from the somatic calls. The GnomAD resource is still required though as this common SNPs are used elsewhere to
    calculate the contamination (default: false)

Output:
    * Output VCF
    * Other intermediate files
    """
